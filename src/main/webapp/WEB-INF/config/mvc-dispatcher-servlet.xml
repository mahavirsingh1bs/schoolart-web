<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
     
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />
 
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resourcOes directory -->
    <resources mapping="/resources/**" location="/resources/" />
 
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/pages/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
     
    <!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean> 
     
    <beans:bean id="entityManagerFactory"
    	class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
    	<beans:property name="persistenceUnitName" value="schoolart-PU" />
    </beans:bean>

	<beans:bean  id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>
	
	<beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
	<beans:bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
     
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<beans:property name="host" value="aspmx.l.google.com" />
	<beans:property name="port" value="25" />
	<beans:property name="username" value="arunsingh8619@gmail.com" />
	<beans:property name="password" value="Mcd1234$" />
 
	<beans:property name="javaMailProperties">
	  <beans:props>
       	       <beans:prop key="mail.smtp.auth">false</beans:prop>
       	       <beans:prop key="mail.smtp.starttls.enable">false</beans:prop>
      </beans:props>
	</beans:property>
	</beans:bean>
     
    <context:component-scan base-package="com.bhageshri.schoolart" />    

    <tx:annotation-driven transaction-manager="transactionManager" />
</beans:beans>